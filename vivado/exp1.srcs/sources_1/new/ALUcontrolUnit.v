`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////

module ALUcontrolUnit
(
    input [1:0]ALUop, 
    input [2:0]in1,
    input in2,
    input [6:0]opcode,
    output reg [3:0]ALUsel
);

always@(*)begin
    //I format
//    if(ALUop==2'b00)begin
//        ALUsel = 4'b0000;
//    end
    //branch
    if(ALUop==2'b01)begin
        ALUsel = 4'b0001;
    end
    
    //the rest 
    casex({ALUop,in1,in2, opcode})

        /////////////////////////////////////////////////////////R format///////////////////////////////////////////////
        13'b100000_0110011: ALUsel <= 4'b00_00;   //Add
        13'b100001_0110011: ALUsel <= 4'b00_01;   //Sub
        13'b101110_0110011: ALUsel <= 4'b01_01;   //AND
        13'b101100_0110011: ALUsel <= 4'b01_00;   //OR
        13'b101000_0110011: ALUsel <= 4'b01_11;   //XOR
                        
        //shift         
        13'b100010_0110011: ALUsel <= 4'b00_10;   //SLL 
        13'b101010_0110011: ALUsel <= 4'b01_10;   //SRL
        13'b101011_0110011: ALUsel <= 4'b10_11;   //SRA
                   
        //set on   
        13'b100100_0110011: ALUsel <= 4'b11_01;   //SLT
        13'b100110_0110011: ALUsel <= 4'b11_11;   //SLTU
    /////////////////////////////////////////////////////////R format///////////////////////////////////////////////
        
    /////////////////////////////////////////////////////////I format///////////////////////////////////////////////    
        13'b00110x_0010011: ALUsel <= 4'b01_00;   //OR
        13'b00111x_0010011: ALUsel <= 4'b01_01;   //AND
        13'b00100x_0010011: ALUsel <= 4'b01_11;   //XOR
        13'b00010x_0010011: ALUsel <= 4'b11_01;   //SLTI
        13'b00011x_0010011: ALUsel <= 4'b11_11;   //SLTU
        13'b00000x_0010011: ALUsel <= 4'b00_00;   //JALR
        13'b00010x_0000011: ALUsel <= 4'b00_00;   //LW
        13'b00001x_0000011: ALUsel <= 4'b00_00;   //LH
        13'b00000x_0000011: ALUsel <= 4'b00_00;   //LB
        13'b00101x_0000011: ALUsel <= 4'b00_00;   //LHU
        13'b00100x_0000011: ALUsel <= 4'b00_00;   //LBU
        
        13'b000010_0010011: ALUsel <= 4'b10_00;   //SLLI 
        13'b001010_0010011: ALUsel <= 4'b10_01;   //SRLI 
        13'b001011_0010011: ALUsel <= 4'b10_10;   //SRAI  
    /////////////////////////////////////////////////////////I format///////////////////////////////////////////////
    ////////////////////////////////////////////////////////UJ format///////////////////////////////////////////////
        13'b00xxxx_1101111: ALUsel <= 4'b00_00;   //JAL
    ////////////////////////////////////////////////////////UJ format///////////////////////////////////////////////
    
    /////////////////////////////////////////////////////////S format///////////////////////////////////////////////
        13'b00010x_0100011: ALUsel <= 4'b00_00;   //SW
        13'b00001x_0100011: ALUsel <= 4'b00_00;   //SH
        13'b00000x_0100011: ALUsel <= 4'b00_00;   //SB
    /////////////////////////////////////////////////////////S format///////////////////////////////////////////////
        
    endcase
        

end
endmodule
